
Dirty_Dawg_Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000054e  000005e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010c  0080010c  000005ee  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000620  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 3c 01 	jmp	0x278	; 0x278 <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e4       	ldi	r30, 0x4E	; 78
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 30       	cpi	r26, 0x0F	; 15
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <main>
  9e:	0c 94 a5 02 	jmp	0x54a	; 0x54a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <UART_Init>:
  a6:	22 e0       	ldi	r18, 0x02	; 2
  a8:	20 93 c0 00 	sts	0x00C0, r18
  ac:	9c 01       	movw	r18, r24
  ae:	40 e0       	ldi	r20, 0x00	; 0
  b0:	50 e0       	ldi	r21, 0x00	; 0
  b2:	60 e4       	ldi	r22, 0x40	; 64
  b4:	72 e4       	ldi	r23, 0x42	; 66
  b6:	8f e0       	ldi	r24, 0x0F	; 15
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 86 02 	call	0x50c	; 0x50c <__divmodsi4>
  be:	21 50       	subi	r18, 0x01	; 1
  c0:	31 09       	sbc	r19, r1
  c2:	30 93 c5 00 	sts	0x00C5, r19
  c6:	20 93 c4 00 	sts	0x00C4, r18
  ca:	88 e9       	ldi	r24, 0x98	; 152
  cc:	80 93 c1 00 	sts	0x00C1, r24
  d0:	e2 ec       	ldi	r30, 0xC2	; 194
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	86 e0       	ldi	r24, 0x06	; 6
  d6:	80 83       	st	Z, r24
  d8:	80 81       	ld	r24, Z
  da:	80 83       	st	Z, r24
  dc:	08 95       	ret

000000de <BT_Recieve>:
  de:	80 91 c0 00 	lds	r24, 0x00C0
  e2:	87 ff       	sbrs	r24, 7
  e4:	fc cf       	rjmp	.-8      	; 0xde <BT_Recieve>
  e6:	80 91 c6 00 	lds	r24, 0x00C6
  ea:	08 95       	ret

000000ec <BT_Send>:
  ec:	90 91 c0 00 	lds	r25, 0x00C0
  f0:	95 ff       	sbrs	r25, 5
  f2:	fc cf       	rjmp	.-8      	; 0xec <BT_Send>
  f4:	80 93 c6 00 	sts	0x00C6, r24
  f8:	08 95       	ret

000000fa <Uart_Flush>:
  fa:	80 91 c0 00 	lds	r24, 0x00C0
  fe:	87 ff       	sbrs	r24, 7
 100:	03 c0       	rjmp	.+6      	; 0x108 <Uart_Flush+0xe>
 102:	80 91 c6 00 	lds	r24, 0x00C6
 106:	f9 cf       	rjmp	.-14     	; 0xfa <Uart_Flush>
 108:	08 95       	ret

0000010a <Error>:
 10a:	c8 2f       	mov	r28, r24
 10c:	c1 2c       	mov	r12, r1
 10e:	d1 2c       	mov	r13, r1
 110:	76 01       	movw	r14, r12
 112:	80 e1       	ldi	r24, 0x10	; 16
 114:	88 2e       	mov	r8, r24
 116:	87 e2       	ldi	r24, 0x27	; 39
 118:	98 2e       	mov	r9, r24
 11a:	a1 2c       	mov	r10, r1
 11c:	b1 2c       	mov	r11, r1
 11e:	d2 e0       	ldi	r29, 0x02	; 2
 120:	c7 01       	movw	r24, r14
 122:	b6 01       	movw	r22, r12
 124:	a5 01       	movw	r20, r10
 126:	94 01       	movw	r18, r8
 128:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__udivmodsi4>
 12c:	67 2b       	or	r22, r23
 12e:	68 2b       	or	r22, r24
 130:	69 2b       	or	r22, r25
 132:	21 f4       	brne	.+8      	; 0x13c <Error+0x32>
 134:	d3 b9       	out	0x03, r29	; 3
 136:	8c 2f       	mov	r24, r28
 138:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	c8 1a       	sub	r12, r24
 140:	d8 0a       	sbc	r13, r24
 142:	e8 0a       	sbc	r14, r24
 144:	f8 0a       	sbc	r15, r24
 146:	ec cf       	rjmp	.-40     	; 0x120 <Error+0x16>

00000148 <BT_Pair>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	cd b7       	in	r28, 0x3d	; 61
 14e:	de b7       	in	r29, 0x3e	; 62
 150:	2c 97       	sbiw	r28, 0x0c	; 12
 152:	0f b6       	in	r0, 0x3f	; 63
 154:	f8 94       	cli
 156:	de bf       	out	0x3e, r29	; 62
 158:	0f be       	out	0x3f, r0	; 63
 15a:	cd bf       	out	0x3d, r28	; 61
 15c:	8c e0       	ldi	r24, 0x0C	; 12
 15e:	f8 2e       	mov	r15, r24
 160:	6e 01       	movw	r12, r28
 162:	8d e0       	ldi	r24, 0x0D	; 13
 164:	c8 0e       	add	r12, r24
 166:	d1 1c       	adc	r13, r1
 168:	84 e2       	ldi	r24, 0x24	; 36
 16a:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 16e:	84 e2       	ldi	r24, 0x24	; 36
 170:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 174:	84 e2       	ldi	r24, 0x24	; 36
 176:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 17a:	0e 94 6f 00 	call	0xde	; 0xde <BT_Recieve>
 17e:	85 34       	cpi	r24, 0x45	; 69
 180:	21 f4       	brne	.+8      	; 0x18a <BT_Pair+0x42>
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	0e 94 85 00 	call	0x10a	; 0x10a <Error>
 18a:	0e 94 7d 00 	call	0xfa	; 0xfa <Uart_Flush>
 18e:	e0 e0       	ldi	r30, 0x00	; 0
 190:	f1 e0       	ldi	r31, 0x01	; 1
 192:	de 01       	movw	r26, r28
 194:	11 96       	adiw	r26, 0x01	; 1
 196:	8f 2d       	mov	r24, r15
 198:	01 90       	ld	r0, Z+
 19a:	0d 92       	st	X+, r0
 19c:	8a 95       	dec	r24
 19e:	e1 f7       	brne	.-8      	; 0x198 <BT_Pair+0x50>
 1a0:	83 e6       	ldi	r24, 0x63	; 99
 1a2:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 1a6:	8c e2       	ldi	r24, 0x2C	; 44
 1a8:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 1ac:	8e 01       	movw	r16, r28
 1ae:	0f 5f       	subi	r16, 0xFF	; 255
 1b0:	1f 4f       	sbci	r17, 0xFF	; 255
 1b2:	f8 01       	movw	r30, r16
 1b4:	81 91       	ld	r24, Z+
 1b6:	8f 01       	movw	r16, r30
 1b8:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 1bc:	0c 15       	cp	r16, r12
 1be:	1d 05       	cpc	r17, r13
 1c0:	c1 f7       	brne	.-16     	; 0x1b2 <BT_Pair+0x6a>
 1c2:	8a e0       	ldi	r24, 0x0A	; 10
 1c4:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 1c8:	8d e0       	ldi	r24, 0x0D	; 13
 1ca:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 1ce:	cc cf       	rjmp	.-104    	; 0x168 <BT_Pair+0x20>

000001d0 <__vector_18>:
 1d0:	1f 92       	push	r1
 1d2:	0f 92       	push	r0
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	0f 92       	push	r0
 1d8:	11 24       	eor	r1, r1
 1da:	ef 92       	push	r14
 1dc:	ff 92       	push	r15
 1de:	0f 93       	push	r16
 1e0:	1f 93       	push	r17
 1e2:	2f 93       	push	r18
 1e4:	3f 93       	push	r19
 1e6:	4f 93       	push	r20
 1e8:	5f 93       	push	r21
 1ea:	6f 93       	push	r22
 1ec:	7f 93       	push	r23
 1ee:	8f 93       	push	r24
 1f0:	9f 93       	push	r25
 1f2:	af 93       	push	r26
 1f4:	bf 93       	push	r27
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	ef 93       	push	r30
 1fc:	ff 93       	push	r31
 1fe:	c0 91 c6 00 	lds	r28, 0x00C6
 202:	00 e0       	ldi	r16, 0x00	; 0
 204:	10 e0       	ldi	r17, 0x00	; 0
 206:	d0 e0       	ldi	r29, 0x00	; 0
 208:	0c 17       	cp	r16, r28
 20a:	1d 07       	cpc	r17, r29
 20c:	6c f4       	brge	.+26     	; 0x228 <__vector_18+0x58>
 20e:	e0 90 0c 01 	lds	r14, 0x010C
 212:	f0 90 0d 01 	lds	r15, 0x010D
 216:	0e 94 6f 00 	call	0xde	; 0xde <BT_Recieve>
 21a:	f7 01       	movw	r30, r14
 21c:	e0 0f       	add	r30, r16
 21e:	f1 1f       	adc	r31, r17
 220:	80 a3       	std	Z+32, r24	; 0x20
 222:	0f 5f       	subi	r16, 0xFF	; 255
 224:	1f 4f       	sbci	r17, 0xFF	; 255
 226:	f0 cf       	rjmp	.-32     	; 0x208 <__vector_18+0x38>
 228:	00 e0       	ldi	r16, 0x00	; 0
 22a:	10 e0       	ldi	r17, 0x00	; 0
 22c:	0c 17       	cp	r16, r28
 22e:	1d 07       	cpc	r17, r29
 230:	64 f4       	brge	.+24     	; 0x24a <__vector_18+0x7a>
 232:	e0 91 0c 01 	lds	r30, 0x010C
 236:	f0 91 0d 01 	lds	r31, 0x010D
 23a:	e0 0f       	add	r30, r16
 23c:	f1 1f       	adc	r31, r17
 23e:	80 a1       	ldd	r24, Z+32	; 0x20
 240:	0e 94 76 00 	call	0xec	; 0xec <BT_Send>
 244:	0f 5f       	subi	r16, 0xFF	; 255
 246:	1f 4f       	sbci	r17, 0xFF	; 255
 248:	f1 cf       	rjmp	.-30     	; 0x22c <__vector_18+0x5c>
 24a:	ff 91       	pop	r31
 24c:	ef 91       	pop	r30
 24e:	df 91       	pop	r29
 250:	cf 91       	pop	r28
 252:	bf 91       	pop	r27
 254:	af 91       	pop	r26
 256:	9f 91       	pop	r25
 258:	8f 91       	pop	r24
 25a:	7f 91       	pop	r23
 25c:	6f 91       	pop	r22
 25e:	5f 91       	pop	r21
 260:	4f 91       	pop	r20
 262:	3f 91       	pop	r19
 264:	2f 91       	pop	r18
 266:	1f 91       	pop	r17
 268:	0f 91       	pop	r16
 26a:	ff 90       	pop	r15
 26c:	ef 90       	pop	r14
 26e:	0f 90       	pop	r0
 270:	0f be       	out	0x3f, r0	; 63
 272:	0f 90       	pop	r0
 274:	1f 90       	pop	r1
 276:	18 95       	reti

00000278 <__vector_5>:
 278:	1f 92       	push	r1
 27a:	0f 92       	push	r0
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	0f 92       	push	r0
 280:	11 24       	eor	r1, r1
 282:	0e 94 a4 00 	call	0x148	; 0x148 <BT_Pair>

00000286 <System_Init>:
 286:	10 92 0e 01 	sts	0x010E, r1
 28a:	8f e0       	ldi	r24, 0x0F	; 15
 28c:	84 b9       	out	0x04, r24	; 4
 28e:	88 ee       	ldi	r24, 0xE8	; 232
 290:	8a b9       	out	0x0a, r24	; 10
 292:	2f ef       	ldi	r18, 0xFF	; 255
 294:	8f e4       	ldi	r24, 0x4F	; 79
 296:	93 ec       	ldi	r25, 0xC3	; 195
 298:	21 50       	subi	r18, 0x01	; 1
 29a:	80 40       	sbci	r24, 0x00	; 0
 29c:	90 40       	sbci	r25, 0x00	; 0
 29e:	e1 f7       	brne	.-8      	; 0x298 <System_Init+0x12>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <System_Init+0x1c>
 2a2:	00 00       	nop
 2a4:	87 e0       	ldi	r24, 0x07	; 7
 2a6:	85 b9       	out	0x05, r24	; 5
 2a8:	2f ef       	ldi	r18, 0xFF	; 255
 2aa:	8f e4       	ldi	r24, 0x4F	; 79
 2ac:	93 ec       	ldi	r25, 0xC3	; 195
 2ae:	21 50       	subi	r18, 0x01	; 1
 2b0:	80 40       	sbci	r24, 0x00	; 0
 2b2:	90 40       	sbci	r25, 0x00	; 0
 2b4:	e1 f7       	brne	.-8      	; 0x2ae <System_Init+0x28>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <System_Init+0x32>
 2b8:	00 00       	nop
 2ba:	15 b8       	out	0x05, r1	; 5
 2bc:	78 94       	sei
 2be:	08 95       	ret

000002c0 <Y_LED_On>:
 2c0:	5f 9a       	sbi	0x0b, 7	; 11
 2c2:	08 95       	ret

000002c4 <main>:
 2c4:	0e 94 43 01 	call	0x286	; 0x286 <System_Init>
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	9b e4       	ldi	r25, 0x4B	; 75
 2cc:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_Init>
 2d0:	0e 94 4b 02 	call	0x496	; 0x496 <TWI_Master_Init>
 2d4:	0e 94 12 02 	call	0x424	; 0x424 <LCD_Init>
 2d8:	0e 94 78 01 	call	0x2f0	; 0x2f0 <PWM_Init>
 2dc:	0e 94 60 01 	call	0x2c0	; 0x2c0 <Y_LED_On>
 2e0:	ff cf       	rjmp	.-2      	; 0x2e0 <main+0x1c>

000002e2 <Stop_Moving>:
 2e2:	18 bc       	out	0x28, r1	; 40
 2e4:	10 92 b4 00 	sts	0x00B4, r1
 2e8:	17 bc       	out	0x27, r1	; 39
 2ea:	10 92 b3 00 	sts	0x00B3, r1
 2ee:	08 95       	ret

000002f0 <PWM_Init>:
 2f0:	e4 e6       	ldi	r30, 0x64	; 100
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	10 82       	st	Z, r1
 2f8:	80 e6       	ldi	r24, 0x60	; 96
 2fa:	8a b9       	out	0x0a, r24	; 10
 2fc:	83 e2       	ldi	r24, 0x23	; 35
 2fe:	80 93 b0 00 	sts	0x00B0, r24
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	80 93 b1 00 	sts	0x00B1, r24
 308:	93 ef       	ldi	r25, 0xF3	; 243
 30a:	94 bd       	out	0x24, r25	; 36
 30c:	85 bd       	out	0x25, r24	; 37
 30e:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <Stop_Moving>

00000312 <Write_Byte>:
 312:	cf 93       	push	r28
 314:	df 93       	push	r29
 316:	c8 2f       	mov	r28, r24
 318:	d6 2f       	mov	r29, r22
 31a:	84 ea       	ldi	r24, 0xA4	; 164
 31c:	80 93 bc 00 	sts	0x00BC, r24
 320:	0e 94 5f 02 	call	0x4be	; 0x4be <TWI_Busy>
 324:	89 2b       	or	r24, r25
 326:	e1 f3       	breq	.-8      	; 0x320 <Write_Byte+0xe>
 328:	80 91 b9 00 	lds	r24, 0x00B9
 32c:	88 7f       	andi	r24, 0xF8	; 248
 32e:	88 30       	cpi	r24, 0x08	; 8
 330:	21 f0       	breq	.+8      	; 0x33a <Write_Byte+0x28>
 332:	88 e0       	ldi	r24, 0x08	; 8
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	0e 94 85 00 	call	0x10a	; 0x10a <Error>
 33a:	cc 0f       	add	r28, r28
 33c:	c0 93 bb 00 	sts	0x00BB, r28
 340:	84 e8       	ldi	r24, 0x84	; 132
 342:	80 93 bc 00 	sts	0x00BC, r24
 346:	0e 94 5f 02 	call	0x4be	; 0x4be <TWI_Busy>
 34a:	89 2b       	or	r24, r25
 34c:	e1 f3       	breq	.-8      	; 0x346 <Write_Byte+0x34>
 34e:	80 91 b9 00 	lds	r24, 0x00B9
 352:	88 7f       	andi	r24, 0xF8	; 248
 354:	88 31       	cpi	r24, 0x18	; 24
 356:	31 f0       	breq	.+12     	; 0x364 <Write_Byte+0x52>
 358:	80 91 b9 00 	lds	r24, 0x00B9
 35c:	88 7f       	andi	r24, 0xF8	; 248
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 85 00 	call	0x10a	; 0x10a <Error>
 364:	d0 93 bb 00 	sts	0x00BB, r29
 368:	84 e8       	ldi	r24, 0x84	; 132
 36a:	80 93 bc 00 	sts	0x00BC, r24
 36e:	0e 94 5f 02 	call	0x4be	; 0x4be <TWI_Busy>
 372:	89 2b       	or	r24, r25
 374:	e1 f3       	breq	.-8      	; 0x36e <Write_Byte+0x5c>
 376:	80 91 b9 00 	lds	r24, 0x00B9
 37a:	88 7f       	andi	r24, 0xF8	; 248
 37c:	88 32       	cpi	r24, 0x28	; 40
 37e:	31 f0       	breq	.+12     	; 0x38c <Write_Byte+0x7a>
 380:	80 91 b9 00 	lds	r24, 0x00B9
 384:	88 7f       	andi	r24, 0xF8	; 248
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	0e 94 85 00 	call	0x10a	; 0x10a <Error>
 38c:	84 e9       	ldi	r24, 0x94	; 148
 38e:	80 93 bc 00 	sts	0x00BC, r24
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	08 95       	ret

00000398 <LCD_Toggle_enable>:
 398:	cf 93       	push	r28
 39a:	c8 2f       	mov	r28, r24
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	89 ef       	ldi	r24, 0xF9	; 249
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	21 50       	subi	r18, 0x01	; 1
 3a4:	80 40       	sbci	r24, 0x00	; 0
 3a6:	90 40       	sbci	r25, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <LCD_Toggle_enable+0xa>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <LCD_Toggle_enable+0x14>
 3ac:	00 00       	nop
 3ae:	6c 2f       	mov	r22, r28
 3b0:	64 60       	ori	r22, 0x04	; 4
 3b2:	87 e2       	ldi	r24, 0x27	; 39
 3b4:	0e 94 89 01 	call	0x312	; 0x312 <Write_Byte>
 3b8:	2f ef       	ldi	r18, 0xFF	; 255
 3ba:	89 ef       	ldi	r24, 0xF9	; 249
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	21 50       	subi	r18, 0x01	; 1
 3c0:	80 40       	sbci	r24, 0x00	; 0
 3c2:	90 40       	sbci	r25, 0x00	; 0
 3c4:	e1 f7       	brne	.-8      	; 0x3be <LCD_Toggle_enable+0x26>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <LCD_Toggle_enable+0x30>
 3c8:	00 00       	nop
 3ca:	6c 2f       	mov	r22, r28
 3cc:	6b 7f       	andi	r22, 0xFB	; 251
 3ce:	87 e2       	ldi	r24, 0x27	; 39
 3d0:	0e 94 89 01 	call	0x312	; 0x312 <Write_Byte>
 3d4:	2f ef       	ldi	r18, 0xFF	; 255
 3d6:	89 ef       	ldi	r24, 0xF9	; 249
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	21 50       	subi	r18, 0x01	; 1
 3dc:	80 40       	sbci	r24, 0x00	; 0
 3de:	90 40       	sbci	r25, 0x00	; 0
 3e0:	e1 f7       	brne	.-8      	; 0x3da <LCD_Toggle_enable+0x42>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <LCD_Toggle_enable+0x4c>
 3e4:	00 00       	nop
 3e6:	cf 91       	pop	r28
 3e8:	08 95       	ret

000003ea <LCD_Byte>:
 3ea:	cf 93       	push	r28
 3ec:	df 93       	push	r29
 3ee:	d8 2f       	mov	r29, r24
 3f0:	d0 7f       	andi	r29, 0xF0	; 240
 3f2:	d6 2b       	or	r29, r22
 3f4:	d8 60       	ori	r29, 0x08	; 8
 3f6:	68 60       	ori	r22, 0x08	; 8
 3f8:	90 e1       	ldi	r25, 0x10	; 16
 3fa:	89 9f       	mul	r24, r25
 3fc:	90 01       	movw	r18, r0
 3fe:	11 24       	eor	r1, r1
 400:	c6 2f       	mov	r28, r22
 402:	c2 2b       	or	r28, r18
 404:	6d 2f       	mov	r22, r29
 406:	87 e2       	ldi	r24, 0x27	; 39
 408:	0e 94 89 01 	call	0x312	; 0x312 <Write_Byte>
 40c:	8d 2f       	mov	r24, r29
 40e:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_Toggle_enable>
 412:	6c 2f       	mov	r22, r28
 414:	87 e2       	ldi	r24, 0x27	; 39
 416:	0e 94 89 01 	call	0x312	; 0x312 <Write_Byte>
 41a:	8c 2f       	mov	r24, r28
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	0c 94 cc 01 	jmp	0x398	; 0x398 <LCD_Toggle_enable>

00000424 <LCD_Init>:
 424:	60 e0       	ldi	r22, 0x00	; 0
 426:	83 e3       	ldi	r24, 0x33	; 51
 428:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 42c:	60 e0       	ldi	r22, 0x00	; 0
 42e:	82 e3       	ldi	r24, 0x32	; 50
 430:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 434:	60 e0       	ldi	r22, 0x00	; 0
 436:	86 e0       	ldi	r24, 0x06	; 6
 438:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	8c e0       	ldi	r24, 0x0C	; 12
 440:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 444:	60 e0       	ldi	r22, 0x00	; 0
 446:	88 e2       	ldi	r24, 0x28	; 40
 448:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 44c:	60 e0       	ldi	r22, 0x00	; 0
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 454:	2f ef       	ldi	r18, 0xFF	; 255
 456:	89 ef       	ldi	r24, 0xF9	; 249
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	21 50       	subi	r18, 0x01	; 1
 45c:	80 40       	sbci	r24, 0x00	; 0
 45e:	90 40       	sbci	r25, 0x00	; 0
 460:	e1 f7       	brne	.-8      	; 0x45a <LCD_Init+0x36>
 462:	00 c0       	rjmp	.+0      	; 0x464 <LCD_Init+0x40>
 464:	00 00       	nop
 466:	61 e0       	ldi	r22, 0x01	; 1
 468:	82 e4       	ldi	r24, 0x42	; 66
 46a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 46e:	61 e0       	ldi	r22, 0x01	; 1
 470:	8f e4       	ldi	r24, 0x4F	; 79
 472:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 476:	61 e0       	ldi	r22, 0x01	; 1
 478:	8f e4       	ldi	r24, 0x4F	; 79
 47a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 47e:	61 e0       	ldi	r22, 0x01	; 1
 480:	84 e5       	ldi	r24, 0x54	; 84
 482:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 486:	61 e0       	ldi	r22, 0x01	; 1
 488:	85 e4       	ldi	r24, 0x45	; 69
 48a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Byte>
 48e:	61 e0       	ldi	r22, 0x01	; 1
 490:	84 e4       	ldi	r24, 0x44	; 68
 492:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <LCD_Byte>

00000496 <TWI_Master_Init>:
 496:	e4 e6       	ldi	r30, 0x64	; 100
 498:	f0 e0       	ldi	r31, 0x00	; 0
 49a:	80 81       	ld	r24, Z
 49c:	8f 77       	andi	r24, 0x7F	; 127
 49e:	80 83       	st	Z, r24
 4a0:	e9 eb       	ldi	r30, 0xB9	; 185
 4a2:	f0 e0       	ldi	r31, 0x00	; 0
 4a4:	80 81       	ld	r24, Z
 4a6:	8c 7f       	andi	r24, 0xFC	; 252
 4a8:	80 83       	st	Z, r24
 4aa:	80 e2       	ldi	r24, 0x20	; 32
 4ac:	80 93 b8 00 	sts	0x00B8, r24
 4b0:	8f ef       	ldi	r24, 0xFF	; 255
 4b2:	80 93 bb 00 	sts	0x00BB, r24
 4b6:	85 e0       	ldi	r24, 0x05	; 5
 4b8:	80 93 bc 00 	sts	0x00BC, r24
 4bc:	08 95       	ret

000004be <TWI_Busy>:
 4be:	80 91 bc 00 	lds	r24, 0x00BC
 4c2:	80 78       	andi	r24, 0x80	; 128
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	08 95       	ret

000004c8 <__udivmodsi4>:
 4c8:	a1 e2       	ldi	r26, 0x21	; 33
 4ca:	1a 2e       	mov	r1, r26
 4cc:	aa 1b       	sub	r26, r26
 4ce:	bb 1b       	sub	r27, r27
 4d0:	fd 01       	movw	r30, r26
 4d2:	0d c0       	rjmp	.+26     	; 0x4ee <__udivmodsi4_ep>

000004d4 <__udivmodsi4_loop>:
 4d4:	aa 1f       	adc	r26, r26
 4d6:	bb 1f       	adc	r27, r27
 4d8:	ee 1f       	adc	r30, r30
 4da:	ff 1f       	adc	r31, r31
 4dc:	a2 17       	cp	r26, r18
 4de:	b3 07       	cpc	r27, r19
 4e0:	e4 07       	cpc	r30, r20
 4e2:	f5 07       	cpc	r31, r21
 4e4:	20 f0       	brcs	.+8      	; 0x4ee <__udivmodsi4_ep>
 4e6:	a2 1b       	sub	r26, r18
 4e8:	b3 0b       	sbc	r27, r19
 4ea:	e4 0b       	sbc	r30, r20
 4ec:	f5 0b       	sbc	r31, r21

000004ee <__udivmodsi4_ep>:
 4ee:	66 1f       	adc	r22, r22
 4f0:	77 1f       	adc	r23, r23
 4f2:	88 1f       	adc	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	1a 94       	dec	r1
 4f8:	69 f7       	brne	.-38     	; 0x4d4 <__udivmodsi4_loop>
 4fa:	60 95       	com	r22
 4fc:	70 95       	com	r23
 4fe:	80 95       	com	r24
 500:	90 95       	com	r25
 502:	9b 01       	movw	r18, r22
 504:	ac 01       	movw	r20, r24
 506:	bd 01       	movw	r22, r26
 508:	cf 01       	movw	r24, r30
 50a:	08 95       	ret

0000050c <__divmodsi4>:
 50c:	05 2e       	mov	r0, r21
 50e:	97 fb       	bst	r25, 7
 510:	1e f4       	brtc	.+6      	; 0x518 <__divmodsi4+0xc>
 512:	00 94       	com	r0
 514:	0e 94 9d 02 	call	0x53a	; 0x53a <__negsi2>
 518:	57 fd       	sbrc	r21, 7
 51a:	07 d0       	rcall	.+14     	; 0x52a <__divmodsi4_neg2>
 51c:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__udivmodsi4>
 520:	07 fc       	sbrc	r0, 7
 522:	03 d0       	rcall	.+6      	; 0x52a <__divmodsi4_neg2>
 524:	4e f4       	brtc	.+18     	; 0x538 <__divmodsi4_exit>
 526:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__negsi2>

0000052a <__divmodsi4_neg2>:
 52a:	50 95       	com	r21
 52c:	40 95       	com	r20
 52e:	30 95       	com	r19
 530:	21 95       	neg	r18
 532:	3f 4f       	sbci	r19, 0xFF	; 255
 534:	4f 4f       	sbci	r20, 0xFF	; 255
 536:	5f 4f       	sbci	r21, 0xFF	; 255

00000538 <__divmodsi4_exit>:
 538:	08 95       	ret

0000053a <__negsi2>:
 53a:	90 95       	com	r25
 53c:	80 95       	com	r24
 53e:	70 95       	com	r23
 540:	61 95       	neg	r22
 542:	7f 4f       	sbci	r23, 0xFF	; 255
 544:	8f 4f       	sbci	r24, 0xFF	; 255
 546:	9f 4f       	sbci	r25, 0xFF	; 255
 548:	08 95       	ret

0000054a <_exit>:
 54a:	f8 94       	cli

0000054c <__stop_program>:
 54c:	ff cf       	rjmp	.-2      	; 0x54c <__stop_program>
